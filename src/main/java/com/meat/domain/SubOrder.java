package com.meat.domain;

// Generated Feb 8, 2016 5:13:42 PM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * SubOrder generated by hbm2java
 */
@Entity
@Table(name = "sub_order", catalog = "meat_app")
public class SubOrder extends AbstractDomain implements java.io.Serializable {

    private Users users;
    private Timings timings;
    private Orders orders;
    private SellerInvoice sellerInvoice;
    private SellerBranch sellerBranch;
    private Date subOrderDeliveryDate;
    private String subOrderDeliveryTime;
    private String subOrderStatus;
    private Date createdDate;
    private Date modifiedDate;
    private String subOrderCode;
    private long subOrderCount;
    private BigDecimal subOrderTotalPrice;
    private Integer taxValue;
    private BigDecimal discount;
    private String readStatus;
    private SellerUser deliveryUser;
    private String deliveryType;
    private String refundPaidReferenceNo;
    private String refundPaidStatus;
    private BigDecimal refundAmount;
    private BigDecimal subOrderTotalCharges;
    private BigDecimal refundDeductedAmount;
    private BigDecimal refundPayableAmount;
    private String refundDescription;
    private String refundStatus;
    private String billedStatus;
    private String paymentMode;
    private BigDecimal subOrderSubTotalPrice;
    private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);
    private Set<SubOrderStatusCode> subOrderStatusCodes = new HashSet<SubOrderStatusCode>(0);
    private Set<SubOrderTaxes> subOrderTaxes = new HashSet<SubOrderTaxes>(0);;

    public SubOrder() {
    }

    public SubOrder(final String id, final Users users, final Timings timings, final Orders orders, final SellerBranch sellerBranch,
            final String subOrderDeliveryTime, final String subOrderStatus, final String subOrderCode, final long subOrderCount,
            final BigDecimal subOrderTotalPrice, final BigDecimal subOrderSubTotalPrice) {
        this.id = id;
        this.users = users;
        this.timings = timings;
        this.orders = orders;
        this.sellerBranch = sellerBranch;
        this.subOrderDeliveryTime = subOrderDeliveryTime;
        this.subOrderStatus = subOrderStatus;
        this.subOrderCode = subOrderCode;
        this.subOrderCount = subOrderCount;
        this.subOrderTotalPrice = subOrderTotalPrice;
        this.subOrderSubTotalPrice = subOrderSubTotalPrice;
    }

    public SubOrder(final String id, final Users users, final Timings timings, final Orders orders, final SellerInvoice sellerInvoice,
            final SellerBranch sellerBranch, final Date modifiedDate, final Date subOrderDeliveryDate, final String subOrderDeliveryTime,
            final String subOrderStatus, final Date createdDate, final String subOrderCode, final long subOrderCount,
            final BigDecimal subOrderTotalPrice, final Integer taxValue, final BigDecimal discount, final String readStatus,
            final String deliveryType, final String refundPaidReferenceNo, final String refundPaidStatus, final BigDecimal refundAmount,
            final BigDecimal refundDeductedAmount, final String refundDescription, final String refundStatus, final String billedStatus,
            final Set<OrderItem> orderItems, final Set<SubOrderStatusCode> subOrderStatusCodes, final BigDecimal subOrderSubTotalPrice,
            final BigDecimal subOrderTotalCharges, final SellerUser deliveryUser, final Set<SubOrderTaxes> subOrderTaxes,
            final BigDecimal refundPayableAmount, final String paymentMode) {
        this.id = id;
        this.users = users;
        this.timings = timings;
        this.orders = orders;
        this.sellerInvoice = sellerInvoice;
        this.sellerBranch = sellerBranch;
        this.subOrderDeliveryDate = subOrderDeliveryDate;
        this.subOrderDeliveryTime = subOrderDeliveryTime;
        this.subOrderStatus = subOrderStatus;
        this.createdDate = createdDate;
        this.subOrderCode = subOrderCode;
        this.subOrderCount = subOrderCount;
        this.subOrderTotalPrice = subOrderTotalPrice;
        this.taxValue = taxValue;
        this.modifiedDate = modifiedDate;
        this.discount = discount;
        this.readStatus = readStatus;
        this.deliveryType = deliveryType;
        this.refundPaidReferenceNo = refundPaidReferenceNo;
        this.refundPaidStatus = refundPaidStatus;
        this.refundAmount = refundAmount;
        this.refundDeductedAmount = refundDeductedAmount;
        this.refundDescription = refundDescription;
        this.refundStatus = refundStatus;
        this.billedStatus = billedStatus;
        this.orderItems = orderItems;
        this.subOrderStatusCodes = subOrderStatusCodes;
        this.subOrderSubTotalPrice = subOrderSubTotalPrice;
        this.subOrderTotalCharges = subOrderTotalCharges;
        this.deliveryUser = deliveryUser;
        this.subOrderTaxes = subOrderTaxes;
        this.refundPayableAmount = refundPayableAmount;
        this.paymentMode = paymentMode;
    }

    @Column(name = "billed_status", length = 45)
    public String getBilledStatus() {
        return billedStatus;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", length = 19)
    public Date getCreatedDate() {
        return createdDate;
    }

    @Column(name = "delivery_type", length = 45)
    public String getDeliveryType() {
        return deliveryType;
    }

    /**
     * @return the deliveryUser
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "delivery_user_id", nullable = false)
    public SellerUser getDeliveryUser() {
        return deliveryUser;
    }

    @Column(name = "discount")
    public BigDecimal getDiscount() {
        return discount;
    }

    /**
     * @return the modifiedDate
     */

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "modified_date", length = 19)
    public Date getModifiedDate() {
        return modifiedDate;
    }

    /**
     * @return the orderItems
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subOrder")
    public Set<OrderItem> getOrderItems() {
        return orderItems;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "orders_id", nullable = false)
    public Orders getOrders() {
        return orders;
    }

    /**
     * @return the paymentMode
     */
    @Column(name = "payment_mode")
    public String getPaymentMode() {
        return paymentMode;
    }

    @Column(name = "read_status", length = 45)
    public String getReadStatus() {
        return readStatus;
    }

    @Column(name = "refund_amount", precision = 7)
    public BigDecimal getRefundAmount() {
        return refundAmount;
    }

    @Column(name = "refund_deducted_amount", precision = 7)
    public BigDecimal getRefundDeductedAmount() {
        return refundDeductedAmount;
    }

    @Column(name = "refund_description", length = 100)
    public String getRefundDescription() {
        return refundDescription;
    }

    @Column(name = "refund_paid_reference_no", length = 45)
    public String getRefundPaidReferenceNo() {
        return refundPaidReferenceNo;
    }

    @Column(name = "refund_paid_status", length = 45)
    public String getRefundPaidStatus() {
        return refundPaidStatus;
    }

    /**
     * @return the refundPayableAmount
     */
    @Column(name = "refund_payable_amount", precision = 7)
    public BigDecimal getRefundPayableAmount() {
        return refundPayableAmount;
    }

    @Column(name = "refund_status", length = 45)
    public String getRefundStatus() {
        return refundStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_branch_id", nullable = false)
    public SellerBranch getSellerBranch() {
        return sellerBranch;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_invoice_id")
    public SellerInvoice getSellerInvoice() {
        return sellerInvoice;
    }

    @Column(name = "sub_order_code", nullable = false, length = 45)
    public String getSubOrderCode() {
        return subOrderCode;
    }

    @Column(name = "sub_order_count", nullable = false)
    public long getSubOrderCount() {
        return subOrderCount;
    }

    @Column(name = "sub_order_delivery_date", length = 45)
    public Date getSubOrderDeliveryDate() {
        return subOrderDeliveryDate;
    }

    @Column(name = "sub_order_delivery_time", nullable = false, length = 45)
    public String getSubOrderDeliveryTime() {
        return subOrderDeliveryTime;
    }

    @Column(name = "sub_order_status", nullable = false, length = 45)
    public String getSubOrderStatus() {
        return subOrderStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subOrder")
    public Set<SubOrderStatusCode> getSubOrderStatusCodes() {
        return subOrderStatusCodes;
    }

    /**
     * @return the subOrderSubTotalPrice
     */
    @Column(name = "sub_order_sub_total_price")
    public BigDecimal getSubOrderSubTotalPrice() {
        return subOrderSubTotalPrice;
    }

    /**
     * @return the subOrderTaxes
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subOrder")
    public Set<SubOrderTaxes> getSubOrderTaxes() {
        return subOrderTaxes;
    }

    /**
     * @return the subOrderDeliveryCharges
     */
    @Column(name = "sub_order_total_charges")
    public BigDecimal getSubOrderTotalCharges() {
        return subOrderTotalCharges;
    }

    @Column(name = "sub_order_total_price", nullable = false, precision = 9)
    public BigDecimal getSubOrderTotalPrice() {
        return subOrderTotalPrice;
    }

    @Column(name = "tax_value")
    public Integer getTaxValue() {
        return taxValue;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "timings_id")
    public Timings getTimings() {
        return timings;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "users_id", nullable = false)
    public Users getUsers() {
        return users;
    }

    public void setBilledStatus(final String billedStatus) {
        this.billedStatus = billedStatus;
    }

    public void setCreatedDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    public void setDeliveryType(final String deliveryType) {
        this.deliveryType = deliveryType;
    }

    /**
     * @param deliveryUser
     *            the deliveryUser to set
     */
    public void setDeliveryUser(final SellerUser deliveryUser) {
        this.deliveryUser = deliveryUser;
    }

    public void setDiscount(final BigDecimal discount) {
        this.discount = discount;
    }

    /**
     * @param modifiedDate
     *            the modifiedDate to set
     */
    public void setModifiedDate(final Date modifiedDate) {
        this.modifiedDate = modifiedDate;
    }

    /**
     * @param orderItems
     *            the orderItems to set
     */
    public void setOrderItems(final Set<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }

    public void setOrders(final Orders orders) {
        this.orders = orders;
    }

    /**
     * @param paymentMode
     *            the paymentMode to set
     */
    public void setPaymentMode(final String paymentMode) {
        this.paymentMode = paymentMode;
    }

    public void setReadStatus(final String readStatus) {
        this.readStatus = readStatus;
    }

    public void setRefundAmount(final BigDecimal refundAmount) {
        this.refundAmount = refundAmount;
    }

    public void setRefundDeductedAmount(final BigDecimal refundDeductedAmount) {
        this.refundDeductedAmount = refundDeductedAmount;
    }

    public void setRefundDescription(final String refundDescription) {
        this.refundDescription = refundDescription;
    }

    public void setRefundPaidReferenceNo(final String refundPaidReferenceNo) {
        this.refundPaidReferenceNo = refundPaidReferenceNo;
    }

    public void setRefundPaidStatus(final String refundPaidStatus) {
        this.refundPaidStatus = refundPaidStatus;
    }

    /**
     * @param refundPayableAmount
     *            the refundPayableAmount to set
     */
    public void setRefundPayableAmount(final BigDecimal refundPayableAmount) {
        this.refundPayableAmount = refundPayableAmount;
    }

    public void setRefundStatus(final String refundStatus) {
        this.refundStatus = refundStatus;
    }

    public void setSellerBranch(final SellerBranch sellerBranch) {
        this.sellerBranch = sellerBranch;
    }

    public void setSellerInvoice(final SellerInvoice sellerInvoice) {
        this.sellerInvoice = sellerInvoice;
    }

    public void setSubOrderCode(final String subOrderCode) {
        this.subOrderCode = subOrderCode;
    }

    public void setSubOrderCount(final long subOrderCount) {
        this.subOrderCount = subOrderCount;
    }

    public void setSubOrderDeliveryDate(final Date subOrderDeliveryDate) {
        this.subOrderDeliveryDate = subOrderDeliveryDate;
    }

    public void setSubOrderDeliveryTime(final String subOrderDeliveryTime) {
        this.subOrderDeliveryTime = subOrderDeliveryTime;
    }

    public void setSubOrderStatus(final String subOrderStatus) {
        this.subOrderStatus = subOrderStatus;
    }

    public void setSubOrderStatusCodes(final Set<SubOrderStatusCode> subOrderStatusCodes) {
        this.subOrderStatusCodes = subOrderStatusCodes;
    }

    /**
     * @param subOrderSubTotalPrice
     *            the subOrderSubTotalPrice to set
     */
    public void setSubOrderSubTotalPrice(final BigDecimal subOrderSubTotalPrice) {
        this.subOrderSubTotalPrice = subOrderSubTotalPrice;
    }

    /**
     * @param subOrderTaxes
     *            the subOrderTaxes to set
     */
    public void setSubOrderTaxes(final Set<SubOrderTaxes> subOrderTaxes) {
        this.subOrderTaxes = subOrderTaxes;
    }

    /**
     * @param subOrderDeliveryCharges
     *            the subOrderDeliveryCharges to set
     */
    public void setSubOrderTotalCharges(final BigDecimal subOrderTotalCharges) {
        this.subOrderTotalCharges = subOrderTotalCharges;
    }

    public void setSubOrderTotalPrice(final BigDecimal subOrderTotalPrice) {
        this.subOrderTotalPrice = subOrderTotalPrice;
    }

    public void setTaxValue(final Integer taxValue) {
        this.taxValue = taxValue;
    }

    public void setTimings(final Timings timings) {
        this.timings = timings;
    }

    public void setUsers(final Users users) {
        this.users = users;
    }

}

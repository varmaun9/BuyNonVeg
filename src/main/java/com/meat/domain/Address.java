package com.meat.domain;

// Generated Nov 4, 2015 12:01:05 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "address", catalog = "meat_app")
public class Address extends AbstractDomain implements java.io.Serializable {

    private String line1;
    private String area;
    private String town;
    private String city;
    private String district;
    private String state;
    private String country;
    private String zipcode;
    private String type;
    private String mobileNo;
    private String contactPerson;
    private String defaultStatus;
    private Set<OrderDeliveryOptions> orderDeliveryOptionses = new HashSet<OrderDeliveryOptions>(0);
    private Set<Users> users = new HashSet<Users>(0);
    //  private Set<SellerBranch> sellerBranches = new HashSet<SellerBranch>(0);
    private Set<SellerBranchAddress> sellerBranchAddresses = new HashSet<SellerBranchAddress>(0);

    public Address() {
    }

    public Address(final String id, final String town, final String area, final String contactPerson, final String city,
            final String district, final String state, final String zipcode, final String defaultStatus, final String type) {
        this.id = id;
        this.town = town;
        this.city = city;
        this.district = district;
        this.area = area;
        this.defaultStatus = defaultStatus;
        this.contactPerson = contactPerson;
        this.state = state;
        this.zipcode = zipcode;
        this.type = type;
    }

    public Address(final String id, final String line1, final String area, final String town, final String city, final String district,
            final String state, final String country, final String defaultStatus, final String zipcode, final String contactPerson,
            final String type, final Set<OrderDeliveryOptions> orderDeliveryOptionses, final Set<SellerBranch> sellerBranches,
            final Set<Users> users, final Set<SellerBranchAddress> sellerBranchAddresses, final String mobileNo) {
        this.id = id;
        this.line1 = line1;
        this.town = town;
        this.city = city;
        this.defaultStatus = defaultStatus;
        this.district = district;
        this.state = state;
        this.country = country;
        this.zipcode = zipcode;
        this.contactPerson = contactPerson;
        this.type = type;
        this.area = area;
        this.orderDeliveryOptionses = orderDeliveryOptionses;
        this.sellerBranchAddresses = sellerBranchAddresses;
        //this.sellerBranches = sellerBranches;
        this.users = users;
        this.mobileNo = mobileNo;
    }

    /**
     * @return the area
     */
    @Column(name = "area")
    public String getArea() {
        return area;
    }

    @Column(name = "city", nullable = false, length = 45)
    public String getCity() {
        return city;
    }

    /**
     * @return the contactPerson
     */
    @Column(name = "contact_person", length = 45)
    public String getContactPerson() {
        return contactPerson;
    }

    @Column(name = "country", length = 45)
    public String getCountry() {
        return country;
    }

    /**
     * @return the defaultStatus
     */
    @Column(name = "default_status")
    public String getDefaultStatus() {
        return defaultStatus;
    }

    @Column(name = "district", length = 45)
    public String getDistrict() {
        return district;
    }

    @Column(name = "line1", length = 45)
    public String getLine1() {
        return line1;
    }

    /**
     * @return the mobileNo
     */
    @Column(name = "mobile_no", length = 45)
    public String getMobileNo() {
        return mobileNo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    public Set<OrderDeliveryOptions> getOrderDeliveryOptionses() {
        return orderDeliveryOptionses;
    }

    /**
     * @return the sellerBranchAddresses
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
    public Set<SellerBranchAddress> getSellerBranchAddresses() {
        return sellerBranchAddresses;
    }

    /*  @ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.REFRESH })
    @JoinTable(name = "seller_branch_address", catalog = "meat", joinColumns = {
            @JoinColumn(name = "address_id", nullable = false, updatable = false) }, inverseJoinColumns = {
                    @JoinColumn(name = "seller_branch_id", nullable = false, updatable = false) })
    public Set<SellerBranch> getSellerBranches() {
        return sellerBranches;
    }
    */
    @Column(name = "state", length = 45)
    public String getState() {
        return state;
    }

    @Column(name = "town", nullable = false, length = 45)
    public String getTown() {
        return town;
    }

    @Column(name = "type", length = 45)
    public String getType() {
        return type;
    }

    @ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.REFRESH })
    @JoinTable(name = "user_address", catalog = "meat_app", joinColumns = {
            @JoinColumn(name = "address_id", nullable = false, updatable = false) }, inverseJoinColumns = {
                    @JoinColumn(name = "users_id", nullable = false, updatable = false) })
    public Set<Users> getUsers() {
        return users;
    }

    @Column(name = "zipcode", nullable = false, length = 45)
    public String getZipcode() {
        return zipcode;
    }

    /**
     * @param area
     *            the area to set
     */
    public void setArea(final String area) {
        this.area = area;
    }

    public void setCity(final String city) {
        this.city = city;
    }

    /**
     * @param contactPerson
     *            the contactPerson to set
     */
    public void setContactPerson(final String contactPerson) {
        this.contactPerson = contactPerson;
    }

    public void setCountry(final String country) {
        this.country = country;
    }

    /**
     * @param defaultStatus
     *            the defaultStatus to set
     */
    public void setDefaultStatus(final String defaultStatus) {
        this.defaultStatus = defaultStatus;
    }

    public void setDistrict(final String district) {
        this.district = district;
    }

    public void setLine1(final String line1) {
        this.line1 = line1;
    }

    /**
     * @param mobileNo
     *            the mobileNo to set
     */
    public void setMobileNo(final String mobileNo) {
        this.mobileNo = mobileNo;
    }

    public void setOrderDeliveryOptionses(final Set<OrderDeliveryOptions> orderDeliveryOptionses) {
        this.orderDeliveryOptionses = orderDeliveryOptionses;
    }

    /**
     * @param sellerBranchAddresses
     *            the sellerBranchAddresses to set
     */
    public void setSellerBranchAddresses(final Set<SellerBranchAddress> sellerBranchAddresses) {
        this.sellerBranchAddresses = sellerBranchAddresses;
    }

    /* public void setSellerBranches(final Set<SellerBranch> sellerBranches) {
        this.sellerBranches = sellerBranches;
    }*/

    public void setState(final String state) {
        this.state = state;
    }

    public void setTown(final String town) {
        this.town = town;
    }

    public void setType(final String type) {
        this.type = type;
    }

    public void setUsers(final Set<Users> users) {
        this.users = users;
    }

    public void setZipcode(final String zipcode) {
        this.zipcode = zipcode;
    }

}

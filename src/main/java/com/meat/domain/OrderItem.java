package com.meat.domain;

// Generated Nov 4, 2015 12:01:05 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * OrderItem generated by hbm2java
 */
@Entity
@Table(name = "order_item", catalog = "meat_app")
public class OrderItem extends AbstractDomain implements java.io.Serializable {

    private SellerItem sellerItem;
    private Orders orders;
    private SubOrder subOrder;
    private String quantity;
    private BigDecimal marketPrice;
    private BigDecimal sellerPrice;
    private BigDecimal sellerDiscounts;
    private BigDecimal otherDiscounts;
    private Float units;
    private String otherOffers;
    private BigDecimal finalUnitPrice;

    private Date deliveryDate;

    private String timingName;

    private Timings timings;

    private String availableTime;
    private String deliveryTime;
    private String orderItemStatus;
    private String orderItemCode;
    private long orderItemCount;
    private Date createdDate;
    private BigDecimal orderItemTotalPrice;
    private Float taxValue;
    private String cutType;
    private Float discount;
    private String specialPieceName;
    private String specialPieceCount;
    private Set<OrderItemStatusCodes> orderItemStatusCodeses = new HashSet<OrderItemStatusCodes>(0);
    private Set<ShipmentItems> shipmentItemses = new HashSet<ShipmentItems>(0);

    public OrderItem() {
    }

    public OrderItem(final String id, final SellerItem sellerItem, final Orders orders, final String quantity, final Float units,
            final String orderItemStatus, final String specialPieceName, final String specialPieceCount, final long orderItemCount,
            final Date createdDate, final BigDecimal orderItemTotalPrice, final String orderItemCode, final BigDecimal marketPrice,
            final BigDecimal sellerPrice, final BigDecimal otherDiscounts, final BigDecimal sellerDiscounts, final String otherOffers,
            final BigDecimal finalUnitPrice) {
        this.id = id;
        this.sellerItem = sellerItem;
        this.orders = orders;
        this.quantity = quantity;
        this.marketPrice = marketPrice;
        this.units = units;
        this.orderItemStatus = orderItemStatus;
        this.orderItemCount = orderItemCount;
        this.createdDate = createdDate;
        this.orderItemTotalPrice = orderItemTotalPrice;
        this.orderItemCode = orderItemCode;
        this.specialPieceCount = specialPieceCount;
        this.specialPieceName = specialPieceName;
        this.sellerPrice = sellerPrice;
        this.sellerDiscounts = sellerDiscounts;
        this.otherDiscounts = otherDiscounts;
        this.otherOffers = otherOffers;
        this.finalUnitPrice = finalUnitPrice;

    }

    public OrderItem(final String id, final SellerItem sellerItem, final Orders orders, final SubOrder subOrder, final String quantity,
            final String cutType, final Float units, final Date deliveryDate, final String timingName, final Timings timings,
            final String availableTime, final String deliveryTime, final String orderItemStatus, final long orderItemCount,
            final Date createdDate, final Set<OrderItemStatusCodes> orderItemStatusCodeses, final Set<ShipmentItems> shipmentItemses,
            final BigDecimal orderItemTotalPrice, final String orderItemCode, final BigDecimal marketPrice, final BigDecimal sellerPrice,
            final BigDecimal otherDiscounts, final BigDecimal sellerDiscounts, final String otherOffers, final BigDecimal finalUnitPrice) {
        this.id = id;
        this.sellerItem = sellerItem;
        this.orders = orders;
        this.subOrder = subOrder;
        this.quantity = quantity;
        this.marketPrice = marketPrice;
        this.units = units;
        this.sellerPrice = sellerPrice;
        this.deliveryDate = deliveryDate;
        this.timingName = timingName;
        this.cutType = cutType;
        this.timings = timings;
        this.finalUnitPrice = finalUnitPrice;
        this.availableTime = availableTime;
        this.deliveryTime = deliveryTime;
        this.orderItemStatus = orderItemStatus;
        this.orderItemCode = orderItemCode;
        this.orderItemCount = orderItemCount;
        this.createdDate = createdDate;
        this.orderItemStatusCodeses = orderItemStatusCodeses;
        this.shipmentItemses = shipmentItemses;
        this.orderItemTotalPrice = orderItemTotalPrice;
        this.otherDiscounts = otherDiscounts;
        this.sellerDiscounts = sellerDiscounts;
        this.otherOffers = otherOffers;

    }

    @Column(name = "available_time", length = 500)
    public String getAvailableTime() {
        return availableTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", nullable = false, length = 19)
    public Date getCreatedDate() {
        return createdDate;
    }

    /**
     * @return the cutType
     */
    @Column(name = "cut_type")
    public String getCutType() {
        return cutType;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "delivery_date", length = 19)
    public Date getDeliveryDate() {
        return deliveryDate;
    }

    @Column(name = "delivery_time", length = 45)
    public String getDeliveryTime() {
        return deliveryTime;
    }

    /**
     * @return the discount
     */
    @Column(name = "discount")
    public Float getDiscount() {
        return discount;
    }

    /**
     * @return the finalUnitPrice
     */
    @Column(name = "final_unit_price")
    public BigDecimal getFinalUnitPrice() {
        return finalUnitPrice;
    }

    /**
     * @return the marketPrice
     */
    @Column(name = "market_price")
    public BigDecimal getMarketPrice() {
        return marketPrice;
    }

    @Column(name = "order_item_code", length = 100)
    public String getOrderItemCode() {
        return orderItemCode;
    }

    @Column(name = "order_item_count", nullable = false)
    public long getOrderItemCount() {
        return orderItemCount;
    }

    @Column(name = "order_item_status", nullable = false, length = 45)
    public String getOrderItemStatus() {
        return orderItemStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "orderItem")
    public Set<OrderItemStatusCodes> getOrderItemStatusCodeses() {
        return orderItemStatusCodeses;
    }

    /**
     * @return the orderItemTotalPrice
     */
    @Column(name = "order_item_total_price")
    public BigDecimal getOrderItemTotalPrice() {
        return orderItemTotalPrice;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "orders_id", nullable = false)
    public Orders getOrders() {
        return orders;
    }

    @Column(name = "other_discounts")
    public BigDecimal getOtherDiscounts() {
        return otherDiscounts;
    }

    /**
     * @return the otherOffers
     */
    @Column(name = "other_offers")
    public String getOtherOffers() {
        return otherOffers;
    }

    @Column(name = "quantity", nullable = false, length = 45)
    public String getQuantity() {
        return quantity;
    }

    @Column(name = "seller_discounts")
    public BigDecimal getSellerDiscounts() {
        return sellerDiscounts;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_item_id", nullable = false)
    public SellerItem getSellerItem() {
        return sellerItem;
    }

    /**
     * @return the sellerPrice
     */
    @Column(name = "seller_price")
    public BigDecimal getSellerPrice() {
        return sellerPrice;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "orderItem")
    public Set<ShipmentItems> getShipmentItemses() {
        return shipmentItemses;
    }

    @Column(name = "special_piece_count")
    public String getSpecialPieceCount() {
        return specialPieceCount;
    }

    @Column(name = "special_piece_name")
    public String getSpecialPieceName() {
        return specialPieceName;
    }

    /**
     * @return the subOrder
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "sub_order_id", nullable = false)
    public SubOrder getSubOrder() {
        return subOrder;
    }

    /**
     * @return the taxValue
     */
    @Column(name = "tax_value")
    public Float getTaxValue() {
        return taxValue;
    }

    @Column(name = "timing_name", length = 45)
    public String getTimingName() {
        return timingName;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "timings_id")
    public Timings getTimings() {
        return timings;
    }

    @Column(name = "units", nullable = false)
    public Float getUnits() {
        return units;
    }

    public void setAvailableTime(final String availableTime) {
        this.availableTime = availableTime;
    }

    public void setCreatedDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    /**
     * @param cutType
     *            the cutType to set
     */
    public void setCutType(final String cutType) {
        this.cutType = cutType;
    }

    public void setDeliveryDate(final Date deliveryDate) {
        this.deliveryDate = deliveryDate;
    }

    public void setDeliveryTime(final String deliveryTime) {
        this.deliveryTime = deliveryTime;
    }

    /**
     * @param discount
     *            the discount to set
     */
    public void setDiscount(final Float discount) {
        this.discount = discount;
    }

    /**
     * @param finalUnitPrice
     *            the finalUnitPrice to set
     */
    public void setFinalUnitPrice(final BigDecimal finalUnitPrice) {
        this.finalUnitPrice = finalUnitPrice;
    }

    /**
     * @param marketPrice
     *            the marketPrice to set
     */
    public void setMarketPrice(final BigDecimal marketPrice) {
        this.marketPrice = marketPrice;
    }

    public void setOrderItemCode(final String orderItemCode) {
        this.orderItemCode = orderItemCode;
    }

    public void setOrderItemCount(final long orderItemCount) {
        this.orderItemCount = orderItemCount;
    }

    public void setOrderItemStatus(final String orderItemStatus) {
        this.orderItemStatus = orderItemStatus;
    }

    public void setOrderItemStatusCodeses(final Set<OrderItemStatusCodes> orderItemStatusCodeses) {
        this.orderItemStatusCodeses = orderItemStatusCodeses;
    }

    /**
     * @param orderItemTotalPrice
     *            the orderItemTotalPrice to set
     */
    public void setOrderItemTotalPrice(final BigDecimal orderItemTotalPrice) {
        this.orderItemTotalPrice = orderItemTotalPrice;
    }

    public void setOrders(final Orders orders) {
        this.orders = orders;
    }

    public void setOtherDiscounts(final BigDecimal otherDiscounts) {
        this.otherDiscounts = otherDiscounts;
    }

    /**
     * @param otherOffers
     *            the otherOffers to set
     */
    public void setOtherOffers(final String otherOffers) {
        this.otherOffers = otherOffers;
    }

    public void setQuantity(final String quantity) {
        this.quantity = quantity;
    }

    public void setSellerDiscounts(final BigDecimal sellerDiscounts) {
        this.sellerDiscounts = sellerDiscounts;
    }

    public void setSellerItem(final SellerItem sellerItem) {
        this.sellerItem = sellerItem;
    }

    /**
     * @param sellerPrice
     *            the sellerPrice to set
     */
    public void setSellerPrice(final BigDecimal sellerPrice) {
        this.sellerPrice = sellerPrice;
    }

    public void setShipmentItemses(final Set<ShipmentItems> shipmentItemses) {
        this.shipmentItemses = shipmentItemses;
    }

    public void setSpecialPieceCount(final String specialPieceCount) {
        this.specialPieceCount = specialPieceCount;
    }

    public void setSpecialPieceName(final String specialPieceName) {
        this.specialPieceName = specialPieceName;
    }

    /**
     * @param subOrder
     *            the subOrder to set
     */
    public void setSubOrder(final SubOrder subOrder) {
        this.subOrder = subOrder;
    }

    /**
     * @param taxValue
     *            the taxValue to set
     */
    public void setTaxValue(final Float taxValue) {
        this.taxValue = taxValue;
    }

    public void setTimingName(final String timingName) {
        this.timingName = timingName;
    }

    public void setTimings(final Timings timings) {
        this.timings = timings;
    }

    public void setUnits(final Float units) {
        this.units = units;
    }

}

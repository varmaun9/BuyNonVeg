package com.meat.domain;

// Generated Feb 13, 2016 10:49:53 PM by Hibernate Tools 4.0.0

import javax.persistence.*;

/**
 * OfferExcludeConfig generated by hbm2java
 */
@Entity
@Table(name = "offer_exclude_config", catalog = "meat_app")
public class OfferExcludeConfig extends AbstractDomain implements java.io.Serializable {

    private Tags tags;
    private Seller seller;
    private Item item;
    private Offer offer;
    private SellerItem sellerItem;
    private Category category;
    private SellerBranch sellerBranch;
    private SubCategory subCategory;
    private String status;
    private String placedByStatus;

    public OfferExcludeConfig() {
    }

    public OfferExcludeConfig(final String id, final Offer offer, final String status) {
        this.id = id;
        this.offer = offer;
        this.status = status;
    }

    public OfferExcludeConfig(final String id, final Tags tags, final Seller seller, final Item item, final Offer offer,
            final SellerItem sellerItem, final Category category, final SellerBranch sellerBranch, final SubCategory subCategory,
            final String status, final String placedByStatus) {
        this.id = id;
        this.tags = tags;
        this.seller = seller;
        this.item = item;
        this.offer = offer;
        this.sellerItem = sellerItem;
        this.category = category;
        this.sellerBranch = sellerBranch;
        this.subCategory = subCategory;
        this.status = status;
        this.placedByStatus = placedByStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "category_id")
    public Category getCategory() {
        return category;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_id")
    public Item getItem() {
        return item;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "offer_id", nullable = false)
    public Offer getOffer() {
        return offer;
    }

    @Column(name = "placed_by_status", length = 45)
    public String getPlacedByStatus() {
        return placedByStatus;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_id")
    public Seller getSeller() {
        return seller;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_branch_id")
    public SellerBranch getSellerBranch() {
        return sellerBranch;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_item_id")
    public SellerItem getSellerItem() {
        return sellerItem;
    }

    @Column(name = "status", nullable = false, length = 45)
    public String getStatus() {
        return status;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "sub_category_id")
    public SubCategory getSubCategory() {
        return subCategory;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "tags_id")
    public Tags getTags() {
        return tags;
    }

    public void setCategory(final Category category) {
        this.category = category;
    }

    public void setItem(final Item item) {
        this.item = item;
    }

    public void setOffer(final Offer offer) {
        this.offer = offer;
    }

    public void setPlacedByStatus(final String placedByStatus) {
        this.placedByStatus = placedByStatus;
    }

    public void setSeller(final Seller seller) {
        this.seller = seller;
    }

    public void setSellerBranch(final SellerBranch sellerBranch) {
        this.sellerBranch = sellerBranch;
    }

    public void setSellerItem(final SellerItem sellerItem) {
        this.sellerItem = sellerItem;
    }

    public void setStatus(final String status) {
        this.status = status;
    }

    public void setSubCategory(final SubCategory subCategory) {
        this.subCategory = subCategory;
    }

    public void setTags(final Tags tags) {
        this.tags = tags;
    }

}

package com.meat.domain;

// Generated Jan 11, 2016 12:46:59 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * SellerBranchTimings generated by hbm2java
 */
@Entity
@Table(name = "seller_branch_timings", catalog = "meat_app")
public class SellerBranchTimings extends AbstractDomain implements java.io.Serializable {

    private Timings timings;
    private SellerBranch sellerBranch;
    private String status;
    private Date createdDate;
    private String timingsStatus;
    private Set<SellerTimingsConfig> sellerTimingsConfigs = new HashSet<SellerTimingsConfig>(0);

    public SellerBranchTimings() {
    }

    public SellerBranchTimings(final String id, final Timings timings, final String timingsStatus, final SellerBranch sellerBranch,
            final String status) {
        this.id = id;
        this.timings = timings;
        this.sellerBranch = sellerBranch;
        this.status = status;
        this.timingsStatus = timingsStatus;
    }

    public SellerBranchTimings(final String id, final Timings timings, final String timingsStatus, final SellerBranch sellerBranch,
            final String status, final Date createdDate, final Set<SellerTimingsConfig> sellerTimingsConfigs) {
        this.id = id;
        this.timings = timings;
        this.sellerBranch = sellerBranch;
        this.status = status;
        this.timingsStatus = timingsStatus;
        this.createdDate = createdDate;
        this.sellerTimingsConfigs = sellerTimingsConfigs;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", length = 19)
    public Date getCreatedDate() {
        return createdDate;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_branch_id", nullable = false)
    public SellerBranch getSellerBranch() {
        return sellerBranch;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranchTimings")
    public Set<SellerTimingsConfig> getSellerTimingsConfigs() {
        return sellerTimingsConfigs;
    }

    @Column(name = "status", nullable = false, length = 45)
    public String getStatus() {
        return status;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "timings_id", nullable = false)
    public Timings getTimings() {
        return timings;
    }

    /**
     * @return the timingsStatus
     */
    @Column(name = "timings_status")
    public String getTimingsStatus() {
        return timingsStatus;
    }

    public void setCreatedDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    public void setSellerBranch(final SellerBranch sellerBranch) {
        this.sellerBranch = sellerBranch;
    }

    public void setSellerTimingsConfigs(final Set<SellerTimingsConfig> sellerTimingsConfigs) {
        this.sellerTimingsConfigs = sellerTimingsConfigs;
    }

    public void setStatus(final String status) {
        this.status = status;
    }

    public void setTimings(final Timings timings) {
        this.timings = timings;
    }

    /**
     * @param timingsStatus
     *            the timingsStatus to set
     */
    public void setTimingsStatus(final String timingsStatus) {
        this.timingsStatus = timingsStatus;
    }

}

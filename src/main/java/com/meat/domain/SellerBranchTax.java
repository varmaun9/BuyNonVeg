package com.meat.domain;

// Generated Nov 4, 2015 12:01:05 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * SellerBranchTax generated by hbm2java
 */
@Entity
@Table(name = "seller_branch_tax", catalog = "meat_app")
public class SellerBranchTax extends AbstractDomain implements java.io.Serializable {

    private Tax tax;
    private AmountType amountType;
    private BigDecimal taxValue;
    private SellerBranch sellerBranch;
    private String sellerBranchTaxStatus;
    private Date createdDate;
    private Set<SellerItemTax> sellerItemTaxes = new HashSet<SellerItemTax>(0);

    public SellerBranchTax() {
    }

    public SellerBranchTax(final String id, final AmountType amountType, final Tax tax, final BigDecimal taxValue,
            final SellerBranch sellerBranch, final String sellerBranchTaxStatus, final Date createdDate) {
        this.id = id;
        this.tax = tax;
        this.amountType = amountType;
        this.taxValue = taxValue;
        this.sellerBranch = sellerBranch;
        this.sellerBranchTaxStatus = sellerBranchTaxStatus;
        this.createdDate = createdDate;
    }

    public SellerBranchTax(final String id, final AmountType amountType, final Tax tax, final BigDecimal taxValue,
            final SellerBranch sellerBranch, final String sellerBranchTaxStatus, final Date createdDate,
            final Set<SellerItemTax> sellerItemTaxes) {
        this.id = id;
        this.tax = tax;
        this.amountType = amountType;
        this.taxValue = taxValue;
        this.sellerBranch = sellerBranch;
        this.sellerBranchTaxStatus = sellerBranchTaxStatus;
        this.createdDate = createdDate;
        this.sellerItemTaxes = sellerItemTaxes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "amount_type_id", nullable = false)
    public AmountType getAmountType() {
        return amountType;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", nullable = false, length = 19)
    public Date getCreatedDate() {
        return createdDate;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_branch_id", nullable = false)
    public SellerBranch getSellerBranch() {
        return sellerBranch;
    }

    @Column(name = "seller_branch_tax_status", nullable = false, length = 45)
    public String getSellerBranchTaxStatus() {
        return sellerBranchTaxStatus;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranchTax")
    public Set<SellerItemTax> getSellerItemTaxes() {
        return sellerItemTaxes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "tax_id", nullable = false)
    public Tax getTax() {
        return tax;
    }

    @Column(name = "tax_value", nullable = false, precision = 7)
    public BigDecimal getTaxValue() {
        return taxValue;
    }

    public void setAmountType(final AmountType amountType) {
        this.amountType = amountType;
    }

    public void setCreatedDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    public void setSellerBranch(final SellerBranch sellerBranch) {
        this.sellerBranch = sellerBranch;
    }

    public void setSellerBranchTaxStatus(final String sellerBranchTaxStatus) {
        this.sellerBranchTaxStatus = sellerBranchTaxStatus;
    }

    public void setSellerItemTaxes(final Set<SellerItemTax> sellerItemTaxes) {
        this.sellerItemTaxes = sellerItemTaxes;
    }

    public void setTax(final Tax tax) {
        this.tax = tax;
    }

    public void setTaxValue(final BigDecimal taxValue) {
        this.taxValue = taxValue;
    }

}

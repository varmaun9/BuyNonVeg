package com.meat.domain;

// Generated Nov 4, 2015 12:01:05 PM by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * SellerItem generated by hbm2java
 */
@Entity
@Table(name = "seller_item", catalog = "meat_app")
public class SellerItem extends AbstractDomain implements java.io.Serializable {

    private Item item;
    private Seo seo;
    private SellerBranch sellerBranch;
    private String sellerItemName;
    private Integer sellingTag;
    private String quantity;
    private String specialTag;
    private String description;
    private String measurementUnit;
    private BigDecimal marketPrice;
    private BigDecimal sellingPrice;
    private String itemAvailableStatus;
    private Integer countFlag;
    private Float baseUnit;
    private Date createdDate;
    private String sellerStock;
    private BigDecimal offerPrice;
    private String pieceName;
    private Integer pieceCount;
    private Integer minQuantity;
    private BigDecimal sellerPrice;
    private String cutTypes;
    private Set<SellerItemPieceType> sellerItemPieceTypes = new HashSet<SellerItemPieceType>(0);
    private Set<SellerItemImages> sellerItemImageses = new HashSet<SellerItemImages>(0);
    private Set<SellerItemCriteria> sellerItemCriterias = new HashSet<SellerItemCriteria>(0);
    private Set<SellerItemTax> sellerItemTaxes = new HashSet<SellerItemTax>(0);
    private Set<OrderItem> orderItems = new HashSet<OrderItem>(0);
    private Set<UserSellerItemRating> userSellerItemRatings = new HashSet<UserSellerItemRating>(0);
    private Set<OfferExcludeConfig> offerExcludeConfigs = new HashSet<OfferExcludeConfig>(0);
    // private Set<CouponBuyXGetY> couponBuyXGetYsForDiscountItemId = new HashSet<CouponBuyXGetY>(0);
    //private Set<CouponBuyXGetY> couponBuyXGetYsForPurchaseItemId = new HashSet<CouponBuyXGetY>(0);
    private Set<OfferConfig> offerConfigs = new HashSet<OfferConfig>(0);
    private Set<PreOrderCartItems> preOrderCartItems = new HashSet<PreOrderCartItems>(0);

    public SellerItem() {
    }

    public SellerItem(final String id, final Item item, final Seo seo, final String pieceName, final Integer pieceCount,
            final Integer minQuantity, final String sellerItemName, final Integer sellingTag, final String quantity,
            final String specialTag, final BigDecimal offerPrice, final BigDecimal marketPrice, final String description,
            final Float baseUnit, final BigDecimal sellingPrice, final String itemAvailableStatus, final SellerBranch sellerBranch,
            final Integer countFlag, final Date createdDate, final String sellerStock, final String measurementUnit,
            final Set<SellerItemImages> sellerItemImageses, final Set<SellerItemCriteria> sellerItemCriterias,
            final Set<SellerItemPieceType> sellerItemPieceTypes, final Set<SellerItemTax> sellerItemTaxes, final Set<OrderItem> orderItems,
            final Set<UserSellerItemRating> userSellerItemRatings, final Set<OfferConfig> offerConfigs,
            final Set<OfferExcludeConfig> offerExcludeConfigs, final Set<PreOrderCartItems> preOrderCartItems, final String cutTypes,
            final BigDecimal sellerPrice) {
        this.id = id;
        this.item = item;
        this.seo = seo;
        this.sellerItemName = sellerItemName;
        this.sellingTag = sellingTag;
        this.quantity = quantity;
        this.specialTag = specialTag;
        this.countFlag = countFlag;
        this.description = description;
        this.measurementUnit = measurementUnit;
        this.minQuantity = minQuantity;
        this.pieceName = pieceName;
        this.pieceCount = pieceCount;
        this.baseUnit = baseUnit;
        this.marketPrice = marketPrice;
        this.sellingPrice = sellingPrice;
        this.itemAvailableStatus = itemAvailableStatus;
        this.sellerBranch = sellerBranch;
        this.createdDate = createdDate;
        this.sellerStock = sellerStock;
        this.sellerItemImageses = sellerItemImageses;
        this.sellerItemCriterias = sellerItemCriterias;
        this.sellerItemTaxes = sellerItemTaxes;
        this.orderItems = orderItems;
        this.userSellerItemRatings = userSellerItemRatings;
        this.offerConfigs = offerConfigs;
        this.offerExcludeConfigs = offerExcludeConfigs;
        this.sellerItemPieceTypes = sellerItemPieceTypes;
        this.preOrderCartItems = preOrderCartItems;
        this.offerPrice = offerPrice;
        this.cutTypes = cutTypes;
        this.sellerPrice = sellerPrice;
    }

    public SellerItem(final String id, final Item item, final Seo seo, final String sellerItemName, final String quantity,
            final String specialTag, final String description, final Float baseUnit, final Integer countFlag,
            final String itemAvailableStatus, final BigDecimal offerPrice, final SellerBranch sellerBranch, final String measurementUnit,
            final Date createdDate, final BigDecimal sellerPrice) {
        this.id = id;
        this.item = item;
        this.seo = seo;
        this.sellerItemName = sellerItemName;
        this.quantity = quantity;
        this.countFlag = countFlag;
        this.specialTag = specialTag;
        this.offerPrice = offerPrice;
        this.measurementUnit = measurementUnit;
        this.baseUnit = baseUnit;
        this.description = description;
        this.itemAvailableStatus = itemAvailableStatus;
        this.sellerBranch = sellerBranch;
        this.createdDate = createdDate;
        this.sellerPrice = sellerPrice;
    }

    /**
     * @return the baseUnit
     */
    @Column(name = "base_unit", precision = 7)
    public Float getBaseUnit() {
        return baseUnit;
    }

    @Column(name = "count_flag")
    public Integer getCountFlag() {
        return countFlag;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", nullable = false, length = 19)
    public Date getCreatedDate() {
        return createdDate;
    }

    @Column(name = "cut_types")
    public String getCutTypes() {
        return cutTypes;
    }

    @Column(name = "description", length = 1000)
    public String getDescription() {
        return description;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "item_id", nullable = false)
    public Item getItem() {
        return item;
    }

    @Column(name = "item_available_status", nullable = false, length = 45)
    public String getItemAvailableStatus() {
        return itemAvailableStatus;
    }

    /**
     * @return the marketPrice
     */
    @Column(name = "market_price", precision = 7)
    public BigDecimal getMarketPrice() {
        return marketPrice;
    }

    /**
     * @return the measurementUnit
     */
    @Column(name = "measurement_unit")
    public String getMeasurementUnit() {
        return measurementUnit;
    }

    /**
     * @return the minQuantity
     */
    @Column(name = "min_quantity")
    public Integer getMinQuantity() {
        return minQuantity;
    }

    /**
     * @return the offerConfigs
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<OfferConfig> getOfferConfigs() {
        return offerConfigs;
    }

    /**
     * @return the offerExcludeConfigs
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<OfferExcludeConfig> getOfferExcludeConfigs() {
        return offerExcludeConfigs;
    }

    /**
     * @return the offerPrice
     */
    @Column(name = "offer_price", precision = 7)
    public BigDecimal getOfferPrice() {
        return offerPrice;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<OrderItem> getOrderItems() {
        return orderItems;
    }

    /**
     * @return the pieceCount
     */
    @Column(name = "piece_count")
    public Integer getPieceCount() {
        return pieceCount;
    }

    /**
     * @return the pieceName
     */
    @Column(name = "piece_name")
    public String getPieceName() {
        return pieceName;
    }

    /**
     * @return the preOrderCartItems
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<PreOrderCartItems> getPreOrderCartItems() {
        return preOrderCartItems;
    }

    @Column(name = "quantity", nullable = false, length = 45)
    public String getQuantity() {
        return quantity;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_branch_id", nullable = false)
    public SellerBranch getSellerBranch() {
        return sellerBranch;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<SellerItemCriteria> getSellerItemCriterias() {
        return sellerItemCriterias;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<SellerItemImages> getSellerItemImageses() {
        return sellerItemImageses;
    }

    @Column(name = "seller_item_name", nullable = false, length = 100)
    public String getSellerItemName() {
        return sellerItemName;
    }

    /**
     * @return the sellerItemPieceTypes
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<SellerItemPieceType> getSellerItemPieceTypes() {
        return sellerItemPieceTypes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<SellerItemTax> getSellerItemTaxes() {
        return sellerItemTaxes;
    }

    /**
     * @return the sellerPrice
     */
    @Column(name = "seller_price")
    public BigDecimal getSellerPrice() {
        return sellerPrice;
    }

    @Column(name = "seller_stock", length = 45)
    public String getSellerStock() {
        return sellerStock;
    }

    @Column(name = "selling_price", precision = 7)
    public BigDecimal getSellingPrice() {
        return sellingPrice;
    }

    @Column(name = "selling_tag")
    public Integer getSellingTag() {
        return sellingTag;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seo_id", nullable = false)
    public Seo getSeo() {
        return seo;
    }

    @Column(name = "special_tag", nullable = false, length = 45)
    public String getSpecialTag() {
        return specialTag;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerItem")
    public Set<UserSellerItemRating> getUserSellerItemRatings() {
        return userSellerItemRatings;
    }

    /**
     * @param baseUnit
     *            the baseUnit to set
     */
    public void setBaseUnit(final Float baseUnit) {
        this.baseUnit = baseUnit;
    }

    public void setCountFlag(final int countFlag) {
        this.countFlag = countFlag;
    }

    /**
     * @param countFlag
     *            the countFlag to set
     */
    public void setCountFlag(final Integer countFlag) {
        this.countFlag = countFlag;
    }

    public void setCreatedDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    public void setCutTypes(final String cutTypes) {
        this.cutTypes = cutTypes;
    }

    public void setDescription(final String description) {
        this.description = description;
    }

    /*  public void setIngredients(final String ingredients) {
        this.ingredients = ingredients;
    }
    */
    public void setItem(final Item item) {
        this.item = item;
    }

    public void setItemAvailableStatus(final String itemAvailableStatus) {
        this.itemAvailableStatus = itemAvailableStatus;
    }

    /**
     * @param marketPrice
     *            the marketPrice to set
     */
    public void setMarketPrice(final BigDecimal marketPrice) {
        this.marketPrice = marketPrice;
    }

    /**
     * @param measurementUnit
     *            the measurementUnit to set
     */
    public void setMeasurementUnit(final String measurementUnit) {
        this.measurementUnit = measurementUnit;
    }

    /**
     * @param minQuantity
     *            the minQuantity to set
     */
    public void setMinQuantity(final Integer minQuantity) {
        this.minQuantity = minQuantity;
    }

    /**
     * @param offerConfigs
     *            the offerConfigs to set
     */
    public void setOfferConfigs(final Set<OfferConfig> offerConfigs) {
        this.offerConfigs = offerConfigs;
    }

    /**
     * @param offerExcludeConfigs
     *            the offerExcludeConfigs to set
     */
    public void setOfferExcludeConfigs(final Set<OfferExcludeConfig> offerExcludeConfigs) {
        this.offerExcludeConfigs = offerExcludeConfigs;
    }

    /**
     * @param offerPrice
     *            the offerPrice to set
     */
    public void setOfferPrice(final BigDecimal offerPrice) {
        this.offerPrice = offerPrice;
    }

    public void setOrderItems(final Set<OrderItem> orderItems) {
        this.orderItems = orderItems;
    }

    /**
     * @param pieceCount
     *            the pieceCount to set
     */
    public void setPieceCount(final Integer pieceCount) {
        this.pieceCount = pieceCount;
    }

    /**
     * @param pieceName
     *            the pieceName to set
     */
    public void setPieceName(final String pieceName) {
        this.pieceName = pieceName;
    }

    /**
     * @param preOrderCartItems
     *            the preOrderCartItems to set
     */
    public void setPreOrderCartItems(final Set<PreOrderCartItems> preOrderCartItems) {
        this.preOrderCartItems = preOrderCartItems;
    }

    public void setQuantity(final String quantity) {
        this.quantity = quantity;
    }

    public void setSellerBranch(final SellerBranch sellerBranch) {
        this.sellerBranch = sellerBranch;
    }

    public void setSellerItemCriterias(final Set<SellerItemCriteria> sellerItemCriterias) {
        this.sellerItemCriterias = sellerItemCriterias;
    }

    public void setSellerItemImageses(final Set<SellerItemImages> sellerItemImageses) {
        this.sellerItemImageses = sellerItemImageses;
    }

    public void setSellerItemName(final String sellerItemName) {
        this.sellerItemName = sellerItemName;
    }

    /**
     * @param sellerItemPieceTypes
     *            the sellerItemPieceTypes to set
     */
    public void setSellerItemPieceTypes(final Set<SellerItemPieceType> sellerItemPieceTypes) {
        this.sellerItemPieceTypes = sellerItemPieceTypes;
    }

    public void setSellerItemTaxes(final Set<SellerItemTax> sellerItemTaxes) {
        this.sellerItemTaxes = sellerItemTaxes;
    }

    /**
     * @param sellerPrice
     *            the sellerPrice to set
     */
    public void setSellerPrice(final BigDecimal sellerPrice) {
        this.sellerPrice = sellerPrice;
    }

    public void setSellerStock(final String sellerStock) {
        this.sellerStock = sellerStock;
    }

    public void setSellingPrice(final BigDecimal sellingPrice) {
        this.sellingPrice = sellingPrice;
    }

    public void setSellingTag(final Integer sellingTag) {
        this.sellingTag = sellingTag;
    }

    public void setSeo(final Seo seo) {
        this.seo = seo;
    }

    public void setSpecialTag(final String specialTag) {
        this.specialTag = specialTag;
    }

    public void setUserSellerItemRatings(final Set<UserSellerItemRating> userSellerItemRatings) {
        this.userSellerItemRatings = userSellerItemRatings;
    }

}

package com.meat.domain;

// Generated Nov 4, 2015 12:01:05 PM by Hibernate Tools 4.0.0

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "meat_app")
public class Users extends AbstractDomain implements java.io.Serializable {

    private String userName;
    private String userType;
    private String emailId;
    private String phoneNo;
    private Date dob;
    private String gender;
    private String password;
    private String status;
    private String userCode;
    private String authenticateStatus;
    private long userCount;
    private Date createdDate;
    private String emailStatus;
    private String userRoleType;

    private Set<Address> addresses = new HashSet<Address>(0);
    private Set<UserSellerItemRating> userSellerItemRatings = new HashSet<UserSellerItemRating>(0);
    private Set<UserItemRating> userItemRatings = new HashSet<UserItemRating>(0);
    private Set<UserWishList> userWishLists = new HashSet<UserWishList>(0);
    private Set<UserImages> userImageses = new HashSet<UserImages>(0);
    private Set<Orders> orders = new HashSet<Orders>(0);
    private Set<Roles> roles = new HashSet<Roles>(0);
    private Set<SellerUser> sellerUser = new HashSet<SellerUser>(0);
    private Set<SubOrder> subOrders = new HashSet<SubOrder>(0);
    private Set<UsersOffer> usersOffers = new HashSet<UsersOffer>(0);
    private Set<PreOrderCartItems> preOrderCartItems = new HashSet<PreOrderCartItems>(0);

    public Users() {

    }

    public Users(final String id, final String userName, final String userType, final String emailId, final String phoneNo, final Date dob,
            final String gender, final String password, final String status, final String userCode, final String authenticateStatus,
            final long userCount, final String userRoleType, final Date createdDate, final String emailStatus,
            final String sellerContactsId, final Set<UserSellerItemRating> userSellerItemRatings, final Set<UserItemRating> userItemRatings,
            final Set<Address> addresses, final Set<UserWishList> userWishLists, final Set<SubOrder> subOrders,
            final Set<UserImages> userImageses, final Set<Orders> orders, final Set<Roles> roles, final Set<UsersOffer> usersOffers,
            final Set<SellerUser> sellerUser) {
        this.id = id;
        this.userName = userName;
        this.userType = userType;
        this.sellerUser = sellerUser;
        this.emailId = emailId;
        this.phoneNo = phoneNo;
        this.dob = dob;
        this.gender = gender;
        this.password = password;
        this.status = status;
        this.userCode = userCode;
        this.authenticateStatus = authenticateStatus;
        this.userCount = userCount;
        this.createdDate = createdDate;
        this.emailStatus = emailStatus;
        this.userSellerItemRatings = userSellerItemRatings;
        this.userItemRatings = userItemRatings;
        this.userWishLists = userWishLists;
        this.userImageses = userImageses;
        this.orders = orders;
        this.subOrders = subOrders;
        this.addresses = addresses;
        this.usersOffers = usersOffers;
        this.userRoleType = userRoleType;
        this.roles = roles;
    }

    public Users(final String id, final String userName, final String userType, final String emailId, final String phoneNo,
            final String password, final String status, final String userRoleType, final String userCode, final long userCount) {
        this.id = id;
        this.userName = userName;
        this.userType = userType;
        this.emailId = emailId;
        this.phoneNo = phoneNo;
        this.password = password;
        this.status = status;
        this.userCode = userCode;
        this.userCount = userCount;
    }

    public Users(final Users user) {
        id = user.id;
        userName = user.userName;
        userType = user.userType;
        emailId = user.emailId;
        phoneNo = user.phoneNo;
        password = user.password;
        status = user.status;
        userCode = user.userCode;
        userCount = user.userCount;
        userRoleType = userRoleType;

    }

    @ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.REFRESH })
    @JoinTable(name = "user_address", catalog = "meat", joinColumns = {
            @JoinColumn(name = "users_id", nullable = false, updatable = false) }, inverseJoinColumns = {
                    @JoinColumn(name = "address_id", nullable = false, updatable = false) })
    public Set<Address> getAddresses() {
        return addresses;
    }

    @Column(name = "authenticate_status", length = 45)
    public String getAuthenticateStatus() {
        return authenticateStatus;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_date", length = 19)
    public Date getCreatedDate() {
        return createdDate;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "dob", length = 10)
    public Date getDob() {
        return dob;
    }

    @Column(name = "email_id", nullable = false, length = 45)
    public String getEmailId() {
        return emailId;
    }

    @Column(name = "email_status", length = 45)
    public String getEmailStatus() {
        return emailStatus;
    }

    @Column(name = "gender", length = 45)
    public String getGender() {
        return gender;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Orders> getOrders() {
        return orders;
    }

    @Column(name = "password", nullable = false, length = 45)
    public String getPassword() {
        return password;
    }

    @Column(name = "phone_no", nullable = false, length = 45)
    public String getPhoneNo() {
        return phoneNo;
    }

    /**
     * @return the preOrderCartItems
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<PreOrderCartItems> getPreOrderCartItems() {
        return preOrderCartItems;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Roles> getRoles() {
        return roles;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<SellerUser> getSellerUser() {
        return sellerUser;
    }

    @Column(name = "status", nullable = false, length = 45)
    public String getStatus() {
        return status;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<SubOrder> getSubOrders() {
        return subOrders;
    }

    @Column(name = "user_code", nullable = false, length = 45)
    public String getUserCode() {
        return userCode;
    }

    @Column(name = "user_count", nullable = false)
    public long getUserCount() {
        return userCount;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<UserImages> getUserImageses() {
        return userImageses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<UserItemRating> getUserItemRatings() {
        return userItemRatings;
    }

    @Column(name = "user_name", nullable = false, length = 45)
    public String getUserName() {
        return userName;
    }

    /**
     * @return the userRoleType
     */
    @Column(name = "user_role_type")
    public String getUserRoleType() {
        return userRoleType;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<UserSellerItemRating> getUserSellerItemRatings() {
        return userSellerItemRatings;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<UsersOffer> getUsersOffers() {
        return usersOffers;
    }

    @Column(name = "user_type", nullable = false, length = 45)
    public String getUserType() {
        return userType;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
    public Set<UserWishList> getUserWishLists() {
        return userWishLists;
    }

    public void setAddresses(final Set<Address> addresses) {
        this.addresses = addresses;
    }

    public void setAuthenticateStatus(final String authenticateStatus) {
        this.authenticateStatus = authenticateStatus;
    }

    public void setCreatedDate(final Date createdDate) {
        this.createdDate = createdDate;
    }

    public void setDob(final Date dob) {
        this.dob = dob;
    }

    public void setEmailId(final String emailId) {
        this.emailId = emailId;
    }

    public void setEmailStatus(final String emailStatus) {
        this.emailStatus = emailStatus;
    }

    public void setGender(final String gender) {
        this.gender = gender;
    }

    public void setOrders(final Set<Orders> orders) {
        this.orders = orders;
    }

    public void setPassword(final String password) {
        this.password = password;
    }

    public void setPhoneNo(final String phoneNo) {
        this.phoneNo = phoneNo;
    }

    /**
     * @param preOrderCartItems
     *            the preOrderCartItems to set
     */
    public void setPreOrderCartItems(final Set<PreOrderCartItems> preOrderCartItems) {
        this.preOrderCartItems = preOrderCartItems;
    }

    public void setRoles(final Set<Roles> roles) {
        this.roles = roles;
    }

    public void setSellerUser(final Set<SellerUser> sellerUser) {
        this.sellerUser = sellerUser;
    }

    public void setStatus(final String status) {
        this.status = status;
    }

    public void setSubOrders(final Set<SubOrder> subOrders) {
        this.subOrders = subOrders;
    }

    public void setUserCode(final String userCode) {
        this.userCode = userCode;
    }

    public void setUserCount(final long userCount) {
        this.userCount = userCount;
    }

    public void setUserImageses(final Set<UserImages> userImageses) {
        this.userImageses = userImageses;
    }

    public void setUserItemRatings(final Set<UserItemRating> userItemRatings) {
        this.userItemRatings = userItemRatings;
    }

    public void setUserName(final String userName) {
        this.userName = userName;
    }

    /**
     * @param userRoleType
     *            the userRoleType to set
     */
    public void setUserRoleType(final String userRoleType) {
        this.userRoleType = userRoleType;
    }

    public void setUserSellerItemRatings(final Set<UserSellerItemRating> userSellerItemRatings) {
        this.userSellerItemRatings = userSellerItemRatings;
    }

    public void setUsersOffers(final Set<UsersOffer> usersOffers) {
        this.usersOffers = usersOffers;
    }

    public void setUserType(final String userType) {
        this.userType = userType;
    }

    public void setUserWishLists(final Set<UserWishList> userWishLists) {
        this.userWishLists = userWishLists;
    }
}

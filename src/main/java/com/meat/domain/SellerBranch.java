package com.meat.domain;

import java.math.BigDecimal;

// Generated Jan 11, 2016 12:46:59 PM by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.*;

/**
 * SellerBranch generated by hbm2java
 */
@Entity
@Table(name = "seller_branch", catalog = "meat_app")
public class SellerBranch extends AbstractDomain implements java.io.Serializable {

    private Seller seller;
    private String branchName;
    private String sellerEmailId;
    private String sellerPhoneNo;
    private String landlineNo;
    private String branchStatus;
    private String minimumOrderTime;
    private String minimumPickupTime;
    private BigDecimal minimumOrderAmount;
    private BigDecimal minimumOrderDeliveryAmount;
    private BigDecimal deliveryCharges;
    private Integer deliveryCutoffDays;
    //   private Set<Address> addresses = new HashSet<Address>(0);
    private Set<SellerBranchAddress> sellerBranchAddresses = new HashSet<SellerBranchAddress>(0);
    private Set<SellerBranchZone> sellerBranchZones = new HashSet<SellerBranchZone>(0);
    private Set<SellerBranchImages> sellerBranchImageses = new HashSet<SellerBranchImages>(0);
    private Set<SellerBranchTimings> sellerBranchTimingses = new HashSet<SellerBranchTimings>(0);
    private Set<SellerItem> sellerItems = new HashSet<SellerItem>(0);
    private Set<SellerBranchTax> sellerBranchTaxes = new HashSet<SellerBranchTax>(0);
    private Set<SubOrder> subOrders = new HashSet<SubOrder>(0);
    private Set<SellerUser> sellerUser = new HashSet<SellerUser>(0);
    private Set<OfferConfig> offerConfigs = new HashSet<OfferConfig>(0);
    private Set<OfferExcludeConfig> offerExcludeConfigs = new HashSet<OfferExcludeConfig>(0);
    private Set<Account> accounts = new HashSet<Account>(0);
    private Set<SellerBankAccount> sellerBankAccounts = new HashSet<SellerBankAccount>(0);
    private Set<SellerBranchCharges> sellerBranchCharges = new HashSet<SellerBranchCharges>(0);

    public SellerBranch() {
    }

    public SellerBranch(final String id, final Seller seller, final BigDecimal deliveryCharges, final String branchName,
            final String sellerEmailId, final String sellerPhoneNo, final String landlineNo, final BigDecimal minimumOrderDeliveryAmount,
            final String minimumPickupTime, final String branchStatus, final BigDecimal minimumOrderAmount, final String minimumOrderTime,
            final Set<Address> addresses, final Set<SellerBranchZone> sellerBranchZones, final Set<SellerBranchImages> sellerBranchImageses,
            final Set<SellerBranchTimings> sellerBranchTimingses, final Set<SellerBranchCharges> sellerBranchCharges,
            final Set<Account> accounts, final Set<SellerItem> sellerItems, final Set<UserSellerItemRating> userSellerItemRatings,
            final Set<SubOrder> subOrders, final Set<SellerBranchTax> sellerBranchTaxes, final Set<OfferConfig> offerConfigs,
            final Integer deliveryCutoffDays, final Set<OfferExcludeConfig> offerExcludeConfigs,
            final Set<SellerBankAccount> sellerBankAccounts, final Set<SellerUser> sellerUser,
            final Set<SellerBranchAddress> sellerBranchAddresses) {

        this.id = id;
        this.seller = seller;
        this.branchName = branchName;
        this.sellerEmailId = sellerEmailId;
        this.sellerUser = sellerUser;
        this.sellerPhoneNo = sellerPhoneNo;
        this.landlineNo = landlineNo;
        this.branchStatus = branchStatus;
        this.minimumOrderTime = minimumOrderTime;
        this.minimumPickupTime = minimumPickupTime;
        // this.addresses = addresses;
        this.accounts = accounts;
        this.sellerBranchCharges = sellerBranchCharges;
        this.sellerBranchAddresses = sellerBranchAddresses;
        this.sellerBranchZones = sellerBranchZones;
        this.sellerBranchImageses = sellerBranchImageses;
        this.sellerBranchTimingses = sellerBranchTimingses;
        this.sellerItems = sellerItems;
        this.minimumOrderDeliveryAmount = minimumOrderDeliveryAmount;
        this.subOrders = subOrders;
        this.sellerBranchTaxes = sellerBranchTaxes;
        this.deliveryCutoffDays = deliveryCutoffDays;
        this.sellerBankAccounts = sellerBankAccounts;
        this.minimumOrderAmount = minimumOrderAmount;
        this.deliveryCharges = deliveryCharges;
    }

    public SellerBranch(final String id, final Seller seller, final String landlineNo, final String branchName, final String sellerPhoneNo,
            final String branchStatus, final String minimumOrderTime, final BigDecimal deliveryCharges, final String minimumPickupTime) {
        this.id = id;
        this.seller = seller;
        this.branchName = branchName;
        this.sellerPhoneNo = sellerPhoneNo;
        this.landlineNo = landlineNo;
        this.branchStatus = branchStatus;
        this.minimumPickupTime = minimumPickupTime;
        this.minimumOrderTime = minimumOrderTime;
    }

    /**
     * @return the accounts
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<Account> getAccounts() {
        return accounts;
    }

    /* @ManyToMany(fetch = FetchType.LAZY, cascade = { CascadeType.MERGE, CascadeType.REFRESH })
    @JoinTable(name = "seller_branch_address", catalog = "meat", joinColumns = {
            @JoinColumn(name = "seller_branch_id", nullable = false, updatable = false) }, inverseJoinColumns = {
                    @JoinColumn(name = "address_id", nullable = false, updatable = false) })
    public Set<Address> getAddresses() {
        return addresses;
    }*/

    @Column(name = "branch_name", nullable = false, length = 100)
    public String getBranchName() {
        return branchName;
    }

    @Column(name = "branch_status", nullable = false, length = 45)
    public String getBranchStatus() {
        return branchStatus;
    }

    /**
     * @return the deliveryCharges
     */
    @Column(name = "delivery_charges", precision = 7)
    public BigDecimal getDeliveryCharges() {

        return deliveryCharges;

    }

    /**
     * this. @return the deliveryCutoffDays
     */
    @Column(name = "delivery_cutoff_days")
    public Integer getDeliveryCutoffDays() {
        return deliveryCutoffDays;
    }

    @Column(name = "landline_no", length = 45)
    public String getLandlineNo() {
        return landlineNo;
    }

    /**
     * @return the minimumOrderAmount
     */
    @Column(name = "minimum_order_amount", precision = 7)
    public BigDecimal getMinimumOrderAmount() {
        return minimumOrderAmount;
    }

    /* @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerImages> getSellerImageses() {
     return sellerImageses;
    }*/

    /**
     * @return the minimunOrderDeliveryAmount
     */
    @Column(name = "minimum_order_delivery_amount", precision = 7)
    public BigDecimal getMinimumOrderDeliveryAmount() {
        return minimumOrderDeliveryAmount;
    }

    @Column(name = "minimum_order_time", nullable = false, length = 45)
    public String getMinimumOrderTime() {
        return minimumOrderTime;
    }

    /**
     * @return the minimumPickupTime
     */
    @Column(name = "minimum_pickup_time")
    public String getMinimumPickupTime() {
        return minimumPickupTime;
    }

    /**
     * @return the offerConfigs
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<OfferConfig> getOfferConfigs() {
        return offerConfigs;
    }

    /**
     * @return the offerExcludeConfigs
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<OfferExcludeConfig> getOfferExcludeConfigs() {
        return offerExcludeConfigs;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "seller_id", nullable = false)
    public Seller getSeller() {
        return seller;
    }

    /**
     * @return the sellerBankAccounts
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBankAccount> getSellerBankAccounts() {
        return sellerBankAccounts;
    }

    /**
     * @return the sellerBranchAddresses
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBranchAddress> getSellerBranchAddresses() {
        return sellerBranchAddresses;
    }

    /**
     * @return the sellerBranchCharges
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBranchCharges> getSellerBranchCharges() {
        return sellerBranchCharges;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBranchImages> getSellerBranchImageses() {
        return sellerBranchImageses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBranchTax> getSellerBranchTaxes() {
        return sellerBranchTaxes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBranchTimings> getSellerBranchTimingses() {
        return sellerBranchTimingses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerBranchZone> getSellerBranchZones() {
        return sellerBranchZones;
    }

    @Column(name = "seller_email_id", length = 45)
    public String getSellerEmailId() {
        return sellerEmailId;
    }

    /*
    public void setSellerImageses(final Set<SellerImages> sellerImageses) {
        this.sellerImageses = sellerImageses;
    }*/

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerItem> getSellerItems() {
        return sellerItems;
    }

    @Column(name = "seller_phone_no", nullable = false, length = 45)
    public String getSellerPhoneNo() {
        return sellerPhoneNo;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SellerUser> getSellerUser() {
        return sellerUser;
    }

    /**
     * @return the subOrders
     */
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerBranch")
    public Set<SubOrder> getSubOrders() {
        return subOrders;
    }

    /**
     * @param accounts
     *            the accounts to set
     */
    public void setAccounts(final Set<Account> accounts) {
        this.accounts = accounts;
    }

    /*   public void setAddresses(final Set<Address> addresses) {
        this.addresses = addresses;
    }
    */
    public void setBranchName(final String branchName) {
        this.branchName = branchName;
    }

    public void setBranchStatus(final String branchStatus) {
        this.branchStatus = branchStatus;
    }

    /**
     * @param deliveryCharges
     *            the deliveryCharges to set
     */
    public void setDeliveryCharges(final BigDecimal deliveryCharges) {
        this.deliveryCharges = deliveryCharges;
    }

    /**
     * @param deliveryCutoffDays
     *            the deliveryCutoffDays to set
     */
    public void setDeliveryCutoffDays(final Integer deliveryCutoffDays) {
        this.deliveryCutoffDays = deliveryCutoffDays;
    }

    public void setLandlineNo(final String landlineNo) {
        this.landlineNo = landlineNo;
    }

    /**
     * @param minimumOrderAmount
     *            the minimumOrderAmount to set
     */
    public void setMinimumOrderAmount(final BigDecimal minimumOrderAmount) {
        this.minimumOrderAmount = minimumOrderAmount;
    }

    /**
     * @param minimunOrderDeliveryAmount
     *            the minimunOrderDeliveryAmount to set
     */
    public void setMinimumOrderDeliveryAmount(final BigDecimal minimunOrderDeliveryAmount) {
        minimumOrderDeliveryAmount = minimunOrderDeliveryAmount;
    }

    public void setMinimumOrderTime(final String minimumOrderTime) {
        this.minimumOrderTime = minimumOrderTime;
    }

    /**
     * @param minimumPickupTime
     *            the minimumPickupTime to set
     */
    public void setMinimumPickupTime(final String minimumPickupTime) {
        this.minimumPickupTime = minimumPickupTime;
    }

    /**
     * @param offerConfigs
     *            the offerConfigs to set
     */
    public void setOfferConfigs(final Set<OfferConfig> offerConfigs) {
        this.offerConfigs = offerConfigs;
    }

    /**
     * @param offerExcludeConfigs
     *            the offerExcludeConfigs to set
     */
    public void setOfferExcludeConfigs(final Set<OfferExcludeConfig> offerExcludeConfigs) {
        this.offerExcludeConfigs = offerExcludeConfigs;
    }

    public void setSeller(final Seller seller) {
        this.seller = seller;
    }

    /**
     * @param sellerBankAccounts
     *            the sellerBankAccounts to set
     */
    public void setSellerBankAccounts(final Set<SellerBankAccount> sellerBankAccounts) {
        this.sellerBankAccounts = sellerBankAccounts;
    }

    /**
     * @param sellerBranchAddresses
     *            the sellerBranchAddresses to set
     */
    public void setSellerBranchAddresses(final Set<SellerBranchAddress> sellerBranchAddresses) {
        this.sellerBranchAddresses = sellerBranchAddresses;
    }

    /**
     * @param sellerBranchCharges
     *            the sellerBranchCharges to set
     */
    public void setSellerBranchCharges(final Set<SellerBranchCharges> sellerBranchCharges) {
        this.sellerBranchCharges = sellerBranchCharges;
    }

    public void setSellerBranchImageses(final Set<SellerBranchImages> sellerBranchImageses) {
        this.sellerBranchImageses = sellerBranchImageses;
    }

    public void setSellerBranchTaxes(final Set<SellerBranchTax> sellerBranchTaxes) {
        this.sellerBranchTaxes = sellerBranchTaxes;
    }

    public void setSellerBranchTimingses(final Set<SellerBranchTimings> sellerBranchTimingses) {
        this.sellerBranchTimingses = sellerBranchTimingses;
    }

    public void setSellerBranchZones(final Set<SellerBranchZone> sellerBranchZones) {
        this.sellerBranchZones = sellerBranchZones;
    }

    public void setSellerEmailId(final String sellerEmailId) {
        this.sellerEmailId = sellerEmailId;
    }

    public void setSellerItems(final Set<SellerItem> sellerItems) {
        this.sellerItems = sellerItems;
    }

    public void setSellerPhoneNo(final String sellerPhoneNo) {
        this.sellerPhoneNo = sellerPhoneNo;
    }

    public void setSellerUser(final Set<SellerUser> sellerUser) {
        this.sellerUser = sellerUser;
    }

    public void setSubOrders(final Set<SubOrder> subOrders) {
        this.subOrders = subOrders;
    }

}
